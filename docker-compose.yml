x-cnf: &cnf
  networks:
    - memcrypt_app
  logging:
    driver: "json-file"
    options:
      max-size: "200k"

networks:
  memcrypt_app:
    name: memcrypt_app

services:
  memcrypt_keycloakdb:
    image: postgres:16
    container_name: memcrypt_keycloakdb
    hostname: memcrypt_keycloakdb
    env_file:
      - .env
    volumes:
      - memcrypt_keycloak_pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: on-failure
    profiles:
      - initial-services
    <<: *cnf

  memcrypt_consoledb:
    image: postgres:16
    container_name: memcrypt_consoledb
    hostname: memcrypt_consoledb
    environment:
      POSTGRES_USER: ${CONSOLE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CONSOLE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CONSOLE_POSTGRES_DB}
    volumes:
      - memcrypt_console_pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${CONSOLE_POSTGRES_USER} -d ${CONSOLE_POSTGRES_DB}",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: on-failure
    profiles:
      - app-services
    <<: *cnf

  memcrypt_keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile.keycloak
    container_name: memcrypt_keycloak
    hostname: memcrypt_keycloak
    env_file:
      - .env
    ports:
      - "8081:8080"
    command: ["start-dev"]
    depends_on:
      memcrypt_keycloakdb:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3; if [ $? -eq 0 ]; then echo 'Healthcheck Successful'; exit 0; else echo 'Healthcheck Failed'; exit 1; fi;",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: on-failure
    profiles:
      - initial-services
    <<: *cnf

  memcrypt_keycloaksetup:
    image: alpine:latest
    container_name: memcrypt_keycloaksetup
    hostname: memcrypt_keycloaksetup
    env_file:
      - .env
    environment:
      - KEYCLOAK_URL=http://memcrypt_keycloak:8080
    depends_on:
      memcrypt_keycloakdb:
        condition: service_healthy
      memcrypt_keycloak:
        condition: service_healthy
    working_dir: /opt
    volumes:
      - ./keycloak/scripts/keycloak_setup.sh:/opt/keycloak_setup.sh
    entrypoint:
      [
        "/bin/sh",
        "-c",
        "apk add --no-cache bash jq curl && chmod +x /opt/keycloak_setup.sh && /opt/keycloak_setup.sh all && exit",
      ]
    restart: no
    profiles:
      - initial-services
    <<: *cnf

  memcrypt_mailservice:
    extends:
      file: ./packages/mailservice/docker-compose.yml
      service: memcrypt_mailservice
    profiles:
      - initial-services
    <<: *cnf

  memcrypt_agentbinary:
    extends:
      file: ./Agentbinary/docker-compose.yml
      service: memcrypt_agentbinary
    profiles:
      - initial-services
    <<: *cnf

  memcrypt_frontend:
    extends:
      file: ./packages/frontend/docker-compose.yml
      service: memcrypt_frontend
    profiles:
      - app-services
    <<: *cnf

  memcrypt_console:
    extends:
      file: ./packages/console/docker-compose.yml
      service: memcrypt_console
    depends_on:
      memcrypt_consoledb:
        condition: service_healthy
    profiles:
      - app-services
    <<: *cnf

volumes:
  memcrypt_keycloak_pgdata:
  memcrypt_mailservice_data:
  memcrypt_agentbinary_storage:
  memcrypt_console_pgdata:
